
plugins {
  id 'eclipse'
  id "java-library"
  id "maven-publish"
  id "org.springframework.boot" version "2.2.2.RELEASE"
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
}

dependencies {

	//-- use these dependencies to pull the inversion build assets from Maven
    compile "io.inversion:inversion-api:${inversionVersion}"
    compile "io.inversion:inversion-jdbc:${inversionVersion}"
    compile "io.inversion:inversion-spring-boot:${inversionVersion}"
    
	//-- If you want to checkout the inversion-engine project to do simultaneous 
	//-- development on any of the core sub-projcts and your own project, you 
	//-- can use gradle sub project dependencies instead of the maven dependencies above.
	//-- To use these dependencies, you will also have to set the project relative 
	//-- path references in settings.gradle 
	 
	//compile project(':inversion-api')
	//compile project(':inversion-jdbc')
	//compile project(':inversion-spring-boot')

}

//-- if you have more than one class with a main(String[] args)
//-- method in it, then you need to tell Spring Boot  which 
//-- one to run
 
springBoot {
	mainClassName = 'io.inversion.spring.InversionMain'
}

//-- customize this task if you want to run different apis via 'gradle bootRun'
//bootRun {
//	main = 'io.inversion.spring.InversionMain'
//	main = 'me.repackage.wiredBySpring.WiredBySpringMain'
//	main = 'me.repackage.wiredByInversion.WiredByInversionMain'
//}