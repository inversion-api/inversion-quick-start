plugins {
    id("org.springframework.boot") version "3.3.4"
}

allprojects
        {
            apply plugin: 'java-library'

            java {
                toolchain {
                    languageVersion = JavaLanguageVersion.of(17)
                }
            }

            repositories {
                mavenCentral()
            }
        }


subprojects
        {
            task sourcesJar(type: Jar) {
                from sourceSets.main.allJava
                archiveClassifier = 'sources'
            }

            javadoc.failOnError = false
            task javadocJar(type: Jar) {
                from javadoc
                archiveClassifier = 'javadoc'
            }
        }


dependencies {

    //-- If you want to checkout the inversion-engine core project to do simultaneous
    //-- development on any of the core sub-projects and your own project, you
    //-- can use local project dependencies instead of maven dependencies.
    //-- To have a local project override your maven dependencies simply
    //-- uncomment the line "includeBuild '../inversion-engine'" in the supplied
    //-- settings.gradle file and gradle will use the local project.
    //-- IMPORTANT the supplied Dockerfile will not work with these local project dependencies
    //-- so make sure "includeBuild '../inversion-engine'" is commented OUT when using Docker.

     api "io.inversion:inversion-core-utils:${inversionVersion}"
     api "io.inversion:inversion-module-jdbc:${inversionVersion}"
     api "io.inversion:inversion-module-spring-boot:${inversionVersion}"
     api group: "com.h2database", name: "h2", version: "${h2Version}"

}

//-- If your project has more than one class with a main(String[] args)
//-- method in it, then you need to tell Spring Boot which one to run
//springBoot {
//	mainClassName = 'me.repackage.SpringBootQuickstartMain'
//}


task run(type:JavaExec) {
    main = "me.repackage.SpringBootQuickstartMain"
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}


task demo(type:JavaExec) {
    main = "me.repackage.SpringBootQuickstartMain"
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
    systemProperty 'db.class', System.getProperty('db.class', 'io.inversion.jdbc.JdbcDb')
    systemProperty 'db.url', System.getProperty('db.url', 'jdbc:h2:mem:northwind;DB_CLOSE_DELAY=-1')
    systemProperty 'db.user', System.getProperty('db.user', 'sa')
    systemProperty 'db.pass', System.getProperty('db.pass', '')
    systemProperty 'db.ddlUrls', System.getProperty('db.ddlUrls', 'io/inversion/jdbc/northwind-h2.ddl')
}